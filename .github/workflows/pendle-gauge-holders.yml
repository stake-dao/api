name: Bot Pendle Gauge Holders

on:
  schedule:
    - cron: '*/10 * * * *'  # Every 5 minutes
  workflow_dispatch: # Allows the workflow to be triggered manually -

env:
  TARGET_DEVOPS_DIR: target-devops
  DEVOPS_DIR: devops

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: stake-dao/automation-jobs
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
          path: ${{ env.DEVOPS_DIR }}
          ref: main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r ${{ env.DEVOPS_DIR }}/requirements.txt
        shell: bash

      - name: Run the pendle gauge holders script
        run: |
          cd ${{ env.DEVOPS_DIR }}
          python script/others/fetch_pendle_holders.py
        shell: bash
        env:
          PYTHONPATH: script/


      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: stake-dao/api
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
          path: ${{ env.TARGET_DEVOPS_DIR }}
        if: always()

      - name: Copy pendle gauge holders data to target repo
        run: |
          cp "${{ env.DEVOPS_DIR }}/stakedao-pendle-holders.json" "${GITHUB_WORKSPACE}/${{ env.TARGET_DEVOPS_DIR }}/api/strategies/pendle/holders/index.json"

      - name: Commit and push if changes found
        run: |
          cd ${{ env.TARGET_DEVOPS_DIR }}
          git config --local user.email "action@github.com"
          git config --local user.name "Stake DAO API update"
          git add api/strategies/pendle/holders
          git commit -m "$(date +"%Y-%m-%d %H:%M:%S"): Auto-update Pendle Gauge Holders data" || exit 0
          git pull --rebase origin main
          git push origin main
        shell: bash
        if: always()
